<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Мессенджер</title>
    <link rel="stylesheet" href="/style.css" />
  </head>
  <body>
    <div class="messenger-container">
      <div class="sidebar">
        <div class="sidebar-header">
          <h2>Чаты</h2>
        </div>
        <div class="chat-list">
          <% chats.forEach(chat => { %>
          <a
            href="/messenger/chat/<%= chat.user_id %>"
            class="chat-item <% if(currentChatUser && currentChatUser.id === chat.user_id) { %>active<% } %>"
          >
            <div class="chat-info">
              <div class="chat-name"><%= chat.user_first_name %></div>
              <div class="last-message"><%= chat.last_message %></div>
            </div>
            <div class="chat-meta">
              <% if (chat.last_message_time) { %>
              <div class="last-message-time">
                <%= new Date(chat.last_message_time).toLocaleTimeString('ru-RU',
                { hour: '2-digit', minute: '2-digit' }) %>
              </div>
              <% } %>
            </div>
          </a>
          <% }); %>
        </div>
      </div>
      <div class="chat-window">
        <% if (currentChatUser) { %>
        <div class="chat-header">
          <h3><%= currentChatUser.first_name %></h3>
        </div>
        <div class="message-list">
          <% let lastTicketId = null; %> <% messages.forEach(message => { %> <%
          if (message.ticket_id !== lastTicketId) { %>
          <div class="ticket-separator">
            <span>Тикет #<%= message.ticket_id %></span>
          </div>
          <% } %>
          <div
            class="message <%= message.sender_type === 'manager' ? 'sent' : 'received' %>"
          >
            <div class="message-bubble"><%= message.message %></div>
          </div>
          <% lastTicketId = message.ticket_id; %> <% }); %>
        </div>
        <div class="message-input">
          <form id="message-form">
            <input
              type="text"
              id="message-input-field"
              placeholder="Введите сообщение..."
            />
            <button type="submit">Отправить</button>
          </form>
        </div>
        <% } else { %>
        <div class="no-chat-selected">
          <p>Выберите чат, чтобы начать общение</p>
        </div>
        <% } %>
      </div>
    </div>

    <% if (currentChatUser) { %>
    <script>
      const messageList = document.querySelector(".message-list");
      const messageForm = document.querySelector("#message-form");
      const messageInputField = document.querySelector("#message-input-field");
      const userId = "<%= currentChatUser.id %>";
      const wsProtocol = window.location.protocol === "https:" ? "wss" : "ws";
      const ws = new WebSocket(`${wsProtocol}://${window.location.host}`);

      ws.onopen = () => {
        console.log("WebSocket connection established");
        // Register this client with its user ID
        ws.send(
          JSON.stringify({
            type: "register",
            payload: { userId: userId },
          })
        );
      };

      ws.onmessage = (event) => {
        const data = JSON.parse(event.data);

        if (
          data.type === "newMessage" &&
          data.payload.userId.toString() === userId
        ) {
          appendMessage(data.payload.message, "received");
        }
      };

      messageForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const message = messageInputField.value;
        if (!message) return;

        const data = {
          type: "sendMessage",
          payload: {
            userId: userId,
            message: message,
          },
        };

        ws.send(JSON.stringify(data));
        appendMessage(message, "sent");
        messageInputField.value = "";
      });

      function appendMessage(text, type) {
        const messageDiv = document.createElement("div");
        messageDiv.classList.add("message", type);

        const bubbleDiv = document.createElement("div");
        bubbleDiv.classList.add("message-bubble");
        bubbleDiv.textContent = text;

        messageDiv.appendChild(bubbleDiv);
        messageList.appendChild(messageDiv);
        messageList.scrollTop = messageList.scrollHeight;
      }
    </script>
    <% } %>
  </body>
</html>
